import{_ as s,c as a,o as e,a2 as i}from"./chunks/framework.CbHMctiC.js";const E=JSON.parse('{"title":"Function: effect()","description":"","frontmatter":{},"headers":[],"relativePath":"md/namespaces/Reactive/functions/effect.md","filePath":"md/namespaces/Reactive/functions/effect.md"}'),t={name:"md/namespaces/Reactive/functions/effect.md"},n=i(`<p><a href="./../../../">z-util-page v3.3.0</a> / <a href="./../">Reactive</a> / effect</p><h1 id="function-effect" tabindex="-1">Function: effect() <a class="header-anchor" href="#function-effect" aria-label="Permalink to &quot;Function: effect()&quot;">​</a></h1><blockquote><p><strong>effect</strong>(<code>func</code>, <code>options</code>): <code>Effect</code></p></blockquote><p>创建副作用函数</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>func</strong>: <code>Function</code></p><p>函数</p><p>• <strong>options</strong>: <code>EffectOptions</code> = <code>{}</code></p><p>配置</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Effect</code></p><p>effectFunc</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(count.value);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打印1</span></span></code></pre></div>`,14),p=[n];function c(l,h,o,r,d,k){return e(),a("div",null,p)}const u=s(t,[["render",c]]);export{E as __pageData,u as default};
