import{_ as e,c as a,o as s,a2 as t}from"./chunks/framework.BLHWSx9w.js";const u=JSON.parse('{"title":"Function: reactive()","description":"","frontmatter":{},"headers":[],"relativePath":"md/namespaces/Reactive/functions/reactive.md","filePath":"md/namespaces/Reactive/functions/reactive.md"}'),i={name:"md/namespaces/Reactive/functions/reactive.md"},n=t(`<p><a href="./../../../">z-util-page v3.2.1</a> / <a href="./../">Reactive</a> / reactive</p><h1 id="function-reactive" tabindex="-1">Function: reactive() <a class="header-anchor" href="#function-reactive" aria-label="Permalink to &quot;Function: reactive()&quot;">​</a></h1><blockquote><p><strong>reactive</strong>&lt;<code>T</code>&gt;(<code>value</code>, <code>isShadow</code>, <code>isReadonly</code>): <code>T</code></p></blockquote><p>代理对象值，返回响应式数据</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong> <em>extends</em> <code>object</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>value</strong>: <code>T</code></p><p>对象值</p><p>• <strong>isShadow</strong>: <code>boolean</code> = <code>false</code></p><p>true为深代理，false为浅代理</p><p>• <strong>isReadonly</strong>: <code>boolean</code> = <code>false</code></p><p>是否只读</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>T</code></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reactive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;张三&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obj.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;李四&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj.name); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//李四</span></span></code></pre></div>`,17),o=[n];function r(c,p,l,h,d,k){return s(),a("div",null,o)}const g=e(i,[["render",r]]);export{u as __pageData,g as default};
