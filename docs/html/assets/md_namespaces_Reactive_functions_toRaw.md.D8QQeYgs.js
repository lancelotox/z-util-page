import{_ as a,c as e,o as s,a2 as t}from"./chunks/framework.BLHWSx9w.js";const m=JSON.parse('{"title":"Function: toRaw()","description":"","frontmatter":{},"headers":[],"relativePath":"md/namespaces/Reactive/functions/toRaw.md","filePath":"md/namespaces/Reactive/functions/toRaw.md"}'),i={name:"md/namespaces/Reactive/functions/toRaw.md"},n=t(`<p><a href="./../../../">z-util-page v3.2.1</a> / <a href="./../">Reactive</a> / toRaw</p><h1 id="function-toraw" tabindex="-1">Function: toRaw() <a class="header-anchor" href="#function-toraw" aria-label="Permalink to &quot;Function: toRaw()&quot;">​</a></h1><blockquote><p><strong>toRaw</strong>&lt;<code>T</code>&gt;(<code>proxy</code>): <code>T</code></p></blockquote><p>获取原始对象</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>proxy</strong>: <code>T</code></p><p>响应式对象</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>T</code></p><p>原始对象</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reactive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(count)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//{ a: 1 }</span></span></code></pre></div>`,14),o=[n];function r(p,h,l,c,d,k){return s(),e("div",null,o)}const g=a(i,[["render",r]]);export{m as __pageData,g as default};
