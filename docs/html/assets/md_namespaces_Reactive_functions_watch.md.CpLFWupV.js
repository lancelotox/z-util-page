import{_ as s,c as a,o as i,a2 as t}from"./chunks/framework.DCBnfD6G.js";const g=JSON.parse('{"title":"Function: watch()","description":"","frontmatter":{},"headers":[],"relativePath":"md/namespaces/Reactive/functions/watch.md","filePath":"md/namespaces/Reactive/functions/watch.md"}'),e={name:"md/namespaces/Reactive/functions/watch.md"},n=t(`<p><a href="./../../../">z-util-page v3.3.0</a> / <a href="./../">Reactive</a> / watch</p><h1 id="function-watch" tabindex="-1">Function: watch() <a class="header-anchor" href="#function-watch" aria-label="Permalink to &quot;Function: watch()&quot;">​</a></h1><blockquote><p><strong>watch</strong>(<code>source</code>, <code>cb</code>, <code>options</code>): <code>void</code></p></blockquote><p>监听响应式数据</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>source</strong>: <code>object</code> | <code>Function</code></p><p>副作用函数或者响应式对象</p><p>• <strong>cb</strong>: <code>Function</code></p><p>数据变化后回调函数</p><p>• <strong>options</strong>: <code>EffectOptions</code> = <code>{}</code></p><p>配置</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">watch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(count, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newVal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">oldVal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newVal, oldVal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打印1 0</span></span></code></pre></div>`,15),h=[n];function p(l,o,c,r,d,k){return i(),a("div",null,h)}const u=s(e,[["render",p]]);export{g as __pageData,u as default};
